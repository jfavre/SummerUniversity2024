don't use the original makefile. Use CMake instead.
# on my laptop, CUDA 12.2
Fri  4 Oct 09:25:12 CEST 2024

# Compile without any in-situ libs

cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
cmake --build build

# compile with Ascent *without* cuda
. ~/ascent.sh
cmake -S . \
      -B buildAscent \
      -DCMAKE_BUILD_TYPE=Release \
      -DAscent_DIR=/local/apps/Ascent/install/ascent-checkout/lib/cmake/ascent \
      -DINSITU=Ascent
cmake --build buildAscent
cd buildAscent
make && ./bin/miniapp 256 256 100 0.001

# compile *with* Ascent-cuda

cmake -S . \
      -B buildAscent-cuda \
      -DCMAKE_BUILD_TYPE=Release \
      -DAscent_DIR=/local/apps/Ascent-cuda/install/ascent-checkout/lib/cmake/ascent \
      -DINSITU=Ascent
cmake --build buildAscent-cuda
cd buildAscent-cuda
. ~/ascent-cuda.sh
make && ./bin/miniapp 256 256 100 0.001

# compile with Catalyst

cmake -S . \
      -B buildCatalyst \
      -DCMAKE_BUILD_TYPE=Release \
      -Dcatalyst_DIR=/local/apps/catalyst-v2.0.0-install/lib/cmake/catalyst-2.0 \
      -DINSITU=Catalyst
cmake --build buildCatalyst
cd buildCatalyst
. ~/pv513.sh
make && ./bin/miniapp 256 256 100 0.001 --pv ../catalyst_state.py

#########################################################
on Piz Daint, tested Thu Mar 30 03:09:21 PM CEST 2023

module load daint-gpu
module load CMake

module load cudatoolkit/21.3_11.2

mkdir build
cd build

0) Compile first without Ascent

cmake -S .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_ARCHITECTURES=60
make
Test => should generate file output.b*
./bin/miniapp 512 512 400 .1

############ ASCENT support ##################################################
1) Compile with Ascent turned ON

module load Ascent/0.9.0-CrayGNU-21.09
cmake -S .. -DINSITU=Ascent -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_ARCHITECTURES=60

Test => should generate files {output.bin,output.bov} AND image files temperature*png

############ Catalyst support ##################################################

module load Catalyst

2)  Compile with Catalyst turned ON

mkdir buildCatalyst
cd buildCatalyst

cmake -S .. -DINSITU=Catalyst -Dcatalyst_DIR=$EBROOTCATALYST/lib/cmake/catalyst-2.0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_ARCHITECTURES=60

Test => 
pushd $SCRATCH
rm {output.bin,output.bov} temperature_*png

module load ParaView
export CATALYST_IMPLEMENTATION_PATHS=/apps/daint/UES/ParaView/5.11-egl/lib64/catalyst

srun -C gpu -A csstaff --time 00:05:00 --partition=debug  /users/jfavre/Projects/SummerUniversity2022/miniapp/cuda/buildCatalyst/bin/miniapp 200 200 201 .01 --pv /users/jfavre/Projects/SummerUniversity2022/miniapp/cuda/catalyst_state.py

